{
  "version": 3,
  "sources": ["../src/typescript/utils.ts", "../src/typescript/add-buttons.ts", "../src/typescript/dialog.ts", "../src/typescript/tag_alert.ts", "../src/typescript/index.ts"],
  "sourcesContent": ["export function waitForElement(selector: string) {\n    return new Promise((resolve: (value: HTMLElement) => void) => {\n        const element = document.querySelector(selector) as HTMLElement;\n        if (element) {\n            resolve(element);\n        }\n\n        const observer = new MutationObserver((mutations) => {\n            const element = document.querySelector(selector) as HTMLElement;\n            if (element) {\n                resolve(element);\n                observer.disconnect();\n            }\n        });\n\n        observer.observe(document.body, {\n            childList: true,\n            subtree: true,\n        });\n    });\n}\n\n/**\n * Waits for the parent element and for a specified number of children on that parent\n * @param {string} parentSelector - the CSS Selector for the parent node\n * @param {number} numChildren - the number of children to wait for\n * @param {string} textContent - the textContent of the parent node\n * @returns {Promise<NodeList | Element>} - the NodeList of the parent's children\n */\nexport function waitForChildNodes(\n    parentSelector: string,\n    numChildren = 1,\n    textContent?: string\n) {\n    colorConsole(\n        `waiting for ${numChildren} children on ${parentSelector} ${\n            textContent ? `with textContent ${textContent}` : ''\n        }`\n    );\n    return new Promise((resolve: (value: NodeList) => void) => {\n        const parent = document.querySelector(parentSelector);\n        if (parent && parent.childElementCount >= numChildren) {\n            resolve(parent.childNodes);\n        }\n\n        const pObserver = new MutationObserver((record) => {\n            const parentNodes = document.querySelectorAll(parentSelector);\n\n            // If we find the nodes, resolve the promise\n            if (textContent) {\n                for (let parentNode of parentNodes) {\n                    if (\n                        parentNode.textContent?.toLowerCase() ===\n                        textContent.toLowerCase()\n                    ) {\n                        colorConsole(\n                            `found parent with textContent ${textContent}...`,\n                            'green',\n                            parentNode\n                        );\n                        resolve(parentNode.childNodes);\n                        pObserver.disconnect();\n                    }\n                }\n            } else if (parentNodes.length >= numChildren) {\n                colorConsole(\n                    `parentAll now has at least ${numChildren} nodes...`,\n                    'green',\n                    parentNodes\n                );\n                resolve(parentNodes);\n                pObserver.disconnect();\n            } else {\n                // If we don't find the nodes within 4 seconds, just resolve with what we have\n                setTimeout(() => {\n                    colorConsole(\n                        `disconnecting waitForChildNodes observer, but parentAll is still waiting on ${\n                            numChildren - parentNodes.length\n                        } nodes...`,\n                        'red',\n                        parentNodes\n                    );\n                    resolve(parentNodes);\n                    pObserver.disconnect();\n                }, 4000);\n            }\n        });\n\n        pObserver.observe(document.body, {\n            childList: true,\n            subtree: true,\n        });\n    });\n}\n\n/**\n * cycles through the labels on the page and finds the address fields\n */\nexport function getAddressDivs(labels: NodeList) {\n    if (!window.prospectCue) {\n        window.prospectCue = {\n            addressDivs: {},\n            tagsAdded: [],\n            contactLabels: [],\n            searchBox: null,\n        };\n    }\n    // Find the Street Address label, then find the containing Div, then use its siblings to find the other address fields.\n    let addressDivChildren;\n    for (let label of labels) {\n        if (\n            label.textContent &&\n            label.textContent.trim() === 'Street Address'\n        ) {\n            /** @type {HTMLElement} */\n            addressDivChildren = (label as HTMLElement).closest(\n                '.pt-3 > div'\n            )?.children;\n            if (!addressDivChildren) {\n                colorConsole('could not find addressDivChildren', 'red');\n                return;\n            }\n\n            const addressDivs: AddressDivs = {\n                streetLabel: label as HTMLElement,\n                streetDiv: addressDivChildren[1] as HTMLElement,\n                cityDiv: addressDivChildren[2] as HTMLElement,\n                stateDiv: addressDivChildren[4] as HTMLElement,\n                zipDiv: addressDivChildren[5] as HTMLElement,\n                addressDivChildren: addressDivChildren,\n            };\n\n            window.prospectCue.addressDivs = addressDivs;\n            return addressDivs;\n        }\n    }\n}\n\nexport function openAllContactDivs() {\n    const contactDivs = document.querySelectorAll(\n        '.hl_contact-details-left > div > .h-full.overflow-y-auto > .py-3.px-3'\n    ) as NodeListOf<HTMLElement>;\n    const actionsSection = contactDivs[contactDivs.length - 1]\n        .nextElementSibling as HTMLElement;\n    // if the svg within the contactDivs or the actionsSection is not visible, then we need to open the div to see the contact info\n    for (let contactDiv of contactDivs) {\n        // path of d attibute when closed is d=\"M9 5l7 7-7 7\"\n        const path = contactDiv.querySelector('svg > path') as SVGPathElement;\n        if (path.getAttribute('d') === 'M9 5l7 7-7 7') {\n            colorConsole('opening contact div', 'green', contactDiv);\n            (contactDiv.firstChild as HTMLElement).click();\n            // wait 1 second for the div to open\n        }\n    }\n}\nexport function colorConsole(\n    logString: string,\n    color?: 'red' | 'green' | 'blue' | 'yellow' | 'orange',\n    object?: object\n) {\n    const colorMap = {\n        red: '#f1889a',\n        green: '#6DECB9',\n        blue: '#88FFF7',\n        yellow: '#FFF6BF',\n        orange: '#f19684',\n    };\n\n    color ??= 'blue';\n\n    console.log(\n        `%c \uD83E\uDE90 ${logString}`,\n        `font-size: 13px; color: ${colorMap[color]} `,\n        object\n    );\n}\n", "import {\n    waitForChildNodes,\n    getAddressDivs,\n    colorConsole,\n    openAllContactDivs,\n} from './utils';\n\nexport async function startAddButtons() {\n    // open all of the contact divs\n    openAllContactDivs();\n    // Check if map buttons already present\n    const labels = await waitForChildNodes(\n        '.hl_contact-details-left .form-group .label',\n        40\n    );\n    const addressDivs = getAddressDivs(labels);\n    if (!addressDivs) {\n        colorConsole(\n            'no address divs found, returning from startAddButtons',\n            'red'\n        );\n        return;\n    }\n    colorConsole('address divs found... inserting map buttons', 'green');\n    await insertMapButtons(addressDivs);\n}\n\n/**\n * Inserts the map buttons\n * @param {{streetLabel: HTMLElement, streetDiv: HTMLElement, cityDiv: HTMLElement, stateDiv: HTMLElement, zipDiv: HTMLElement}} addressDivs\n */\nexport async function insertMapButtons(addressDivs: AddressDivs) {\n    // const prospectTab = $('#prospect > div:nth-child(2)');\n    if (document.querySelectorAll('.zg-map-btns').length > 0) {\n        colorConsole('map buttons already present, returning', 'yellow');\n        return;\n    }\n    const newDiv = document.createElement('div');\n    newDiv.id = 'mapLinks';\n    newDiv.className = 'mapContainerZG';\n    newDiv.style.display = 'inline-flex';\n    const { streetLabel } = addressDivs;\n    streetLabel.style.display = 'inline-flex';\n    streetLabel.style.width = '50%';\n\n    const addressParams: { [key: string]: string | null } = {\n        street: addressDivs.streetDiv.querySelector('input')?.value ?? null,\n        city: addressDivs.cityDiv.querySelector('input')?.value ?? null,\n        state: addressDivs.stateDiv.querySelector('input')?.value ?? null,\n        zip: addressDivs.stateDiv.querySelector('input')?.value ?? null,\n    };\n\n    // create string of address params separatted by a '-', also for each value if it has a space, only add if not null\n    const zillowParams = encodeURIComponent(\n        Object.values(addressParams)\n            .filter((val) => val !== null)\n            .join(' ')\n    );\n\n    const googleParams = Object.values(addressParams)\n        .filter((val) => val !== null)\n        .map((val) => encodeURIComponent(val as string))\n        .join('+');\n\n    const googleButton = `<span class=\"zillowTitle\">Search:</span><a href=\"https://www.google.com/search?q=${googleParams}\" target=\"_blank\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" class=\"zg-map-btns\"></a>`;\n    const zillowButton = `<a href=\"https://www.zillow.com/homes/for_sale/${zillowParams}_rb\" target=\"_blank\" id=\"zillowLink\"><img src=\"https://www.zillow.com/apple-touch-icon.png\" class=\"zg-map-btns\"></a>`;\n    newDiv.innerHTML = googleButton + zillowButton;\n\n    streetLabel.insertAdjacentElement('afterend', newDiv);\n}\n", "// @ts-nocheck\n/**\n * Dialog module.\n * @module dialog.js\n * @version 1.0.0\n * @summary 02-01-2022\n * @author Mads Stoumann\n * @description Custom versions of `alert`, `confirm` and `prompt`, using `<dialog>`\n */\nexport default class Dialog {\n    settings: DialogSettings;\n    dialogSupported?: boolean;\n    dialog?: HTMLDialogElement;\n    elements?: { [key: string]: HTMLElement };\n    focusable?: never[];\n    hasFormData?: boolean;\n\n    constructor(settings = {}) {\n        this.settings = Object.assign(\n            {\n                accept: 'OK',\n                bodyClass: 'dialog-open',\n                cancel: 'Cancel',\n                dialogClass: '',\n                message: '',\n                soundAccept: '',\n                soundOpen: '',\n                template: '',\n            },\n            settings\n        );\n        this.init();\n    }\n\n    collectFormData(formData: FormData) {\n        const object: { [key: string]: string | string[] } = {};\n        formData.forEach((value, key) => {\n            if (typeof value === 'string') {\n                if (object.hasOwnProperty(key)) {\n                    if (!Array.isArray(object[key])) {\n                        object[key] = [object[key] as string];\n                    }\n                    (object[key] as string[]).push(value);\n                } else {\n                    object[key] = value;\n                }\n            }\n        });\n    }\n\n    getFocusable() {\n        return [\n            ...this.dialog?.querySelectorAll(\n                'button,[href],select,textarea,input:not([type=\"hidden\"]),[tabindex]:not([tabindex=\"-1\"])'\n            ),\n        ];\n    }\n\n    init() {\n        this.dialogSupported = typeof HTMLDialogElement === 'function';\n        this.dialog = document.createElement('dialog');\n        this.dialog.role = 'dialog';\n        this.dialog.dataset.component = this.dialogSupported\n            ? 'dialog'\n            : 'no-dialog';\n        this.dialog.innerHTML = `\n    <form method=\"dialog\" data-ref=\"form\">\n      <fieldset data-ref=\"fieldset\" role=\"document\">\n        <legend data-ref=\"message\" id=\"${Math.round(Date.now()).toString(\n            36\n        )}\"></legend>\n        <div data-ref=\"template\"></div>\n      </fieldset>\n      <menu>\n        <button${\n            this.dialogSupported ? '' : ` type=\"button\"`\n        } data-ref=\"cancel\" value=\"cancel\"></button>\n        <button${\n            this.dialogSupported ? '' : ` type=\"button\"`\n        } data-ref=\"accept\" value=\"default\"></button>\n      </menu>\n      <audio data-ref=\"soundAccept\"></audio>\n      <audio data-ref=\"soundOpen\"></audio>\n    </form>`;\n        document.body.appendChild(this.dialog);\n\n        this.elements = {};\n        this.focusable = [];\n        this.dialog\n            .querySelectorAll('[data-ref]')\n            .forEach((el: HTMLElement) => (this.elements[el.dataset.ref] = el));\n        this.dialog.setAttribute('aria-labelledby', this.elements.message.id);\n        this.elements.cancel.addEventListener('click', () => {\n            this.dialog.dispatchEvent(new Event('cancel'));\n        });\n        this.dialog.addEventListener('keydown', (e) => {\n            if (e.key === 'Enter') {\n                if (!this.dialogSupported) e.preventDefault();\n                this.elements.accept.dispatchEvent(new Event('click'));\n            }\n            if (e.key === 'Escape')\n                this.dialog.dispatchEvent(new Event('cancel'));\n            if (e.key === 'Tab') {\n                e.preventDefault();\n                const len = this.focusable.length - 1;\n                let index = this.focusable.indexOf(e.target);\n                index = e.shiftKey ? index - 1 : index + 1;\n                if (index < 0) index = len;\n                if (index > len) index = 0;\n                this.focusable[index].focus();\n            }\n        });\n        this.toggle();\n    }\n\n    open(settings = {}) {\n        const dialog = Object.assign({}, this.settings, settings);\n        this.dialog.className = dialog.dialogClass || '';\n        this.elements.accept.innerText = dialog.accept;\n        this.elements.cancel.innerText = dialog.cancel;\n        this.elements.cancel.hidden = dialog.cancel === '';\n        this.elements.message.innerHTML = dialog.message;\n        this.elements.soundAccept.src = dialog.soundAccept || '';\n        this.elements.soundOpen.src = dialog.soundOpen || '';\n        this.elements.target = dialog.target || '';\n        this.elements.template.innerHTML = dialog.template || '';\n\n        this.focusable = this.getFocusable();\n        this.hasFormData = this.elements.fieldset.elements.length > 0;\n\n        if (dialog.soundOpen) {\n            this.elements.soundOpen.play();\n        }\n\n        this.toggle(true);\n\n        if (this.hasFormData) {\n            this.focusable[0].focus();\n            this.focusable[0].select();\n        } else {\n            this.elements.accept.focus();\n        }\n    }\n\n    toggle(open = false) {\n        if (this.dialogSupported && open) this.dialog.showModal();\n        if (!this.dialogSupported) {\n            document.body.classList.toggle(this.settings.bodyClass, open);\n        }\n        this.dialog.hidden = !open;\n        if (this.elements.target && !open) {\n            this.elements.target.focus();\n        }\n    }\n\n    waitForUser() {\n        return new Promise((resolve) => {\n            this.dialog.addEventListener(\n                'cancel',\n                () => {\n                    this.toggle();\n                    resolve(false);\n                },\n                { once: true }\n            );\n            this.elements.accept.addEventListener(\n                'click',\n                () => {\n                    let value = this.hasFormData\n                        ? this.collectFormData(new FormData(this.elements.form))\n                        : true;\n                    if (\n                        this.elements.soundAccept.getAttribute('src').length > 0\n                    )\n                        this.elements.soundAccept.play();\n                    this.toggle();\n                    resolve(value);\n                },\n                { once: true }\n            );\n        });\n    }\n\n    alert(message, config = { target: e.target }) {\n        const settings = Object.assign({}, config, {\n            cancel: '',\n            message,\n            template: '',\n        });\n        this.open(settings);\n        return this.waitForUser();\n    }\n\n    confirm(message, config = { target: e.target }) {\n        const settings = Object.assign({}, config, { message, template: '' });\n        this.open(settings);\n        return this.waitForUser();\n    }\n\n    prompt(message, value, config = { target: e.target }) {\n        const template = `<label aria-label=\"${message}\"><input type=\"text\" name=\"prompt\" value=\"${value}\"></label>`;\n        const settings = Object.assign({}, config, { message, template });\n        this.open(settings);\n        return this.waitForUser();\n    }\n}\n", "import Dialog from './dialog';\nimport { colorConsole, waitForChildNodes, waitForElement } from './utils';\n\nexport async function addTagElements() {\n    colorConsole(`inserting tag link and tag alert...`, 'blue');\n    if (!window.prospectCue) {\n        window.prospectCue = {\n            addressDivs: {},\n            tagsAdded: [],\n            contactLabels: [],\n            searchBox: null,\n        };\n    }\n    window.prospectCue.tagsAdded = [];\n    const actionsSection = (await waitForChildNodes(\n        '.hl_contact-details-left .h-full .bg-gray-100 [data-v-56639245]',\n        3\n    )) as NodeListOf<HTMLElement>;\n    /** @type {HTMLElement} */\n    let tagDiv: HTMLDivElement | null = null;\n    for (let i = 0; i < actionsSection.length; i++) {\n        const node = actionsSection[i];\n        if (node.textContent && node.textContent.trim() === 'Tags') {\n            tagDiv = node.parentElement as HTMLDivElement;\n            colorConsole(`original tagDiv found -> `, 'orange', tagDiv);\n            break;\n        }\n    }\n\n    if (tagDiv === null) {\n        colorConsole('tag div not found', 'red');\n        return;\n    }\n\n    if (tagDiv.querySelector('.tags-edit-container')) {\n        return;\n    }\n    const newTagDiv = await insertTagLink(tagDiv);\n    if (!newTagDiv) {\n        colorConsole('new tag div not found', 'red');\n        return;\n    }\n    colorConsole(`new tag div found -> `, 'green', newTagDiv);\n    checkAddNewTag(newTagDiv);\n}\n\n/**\n * Inserts an \"Edit Tags\" link next to Tags section in Contact Details.\n * @param {HTMLDivElement} tagDiv - the Tags section on contact info screen\n */\nexport async function insertTagLink(tagDiv: HTMLDivElement) {\n    // If the edit tag div is already present, don't add it again\n    if (tagDiv.querySelector('tags-edit')) return null;\n\n    // Create the tagsAdded array on window object\n    const nodeAfter = tagDiv.lastElementChild;\n\n    // Need container to hold the link so the link doesnt grow with flex-grow\n    const tagContainer = document.createElement('div');\n    tagContainer.classList.add('tags-edit-container');\n\n    const tagLink = document.createElement('a');\n    const currentUrl = window.location.href;\n    tagLink.href = currentUrl.replace(/contacts.*/, 'settings/tags');\n    tagLink.target = '_blank';\n    tagLink.innerHTML = `<span class=\"tags-edit\">Edit Tags  <svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\n  width=\"12\" height=\"12\"\n  viewBox=\"0 0 172 172\"\n  style=\" fill:#000000;\"><g transform=\"\"><g fill=\"none\" fill-rule=\"nonzero\" stroke=\"none\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" stroke-dasharray=\"\" stroke-dashoffset=\"0\" font-family=\"none\" font-weight=\"none\" font-size=\"none\" text-anchor=\"none\" style=\"mix-blend-mode: normal\"><path d=\"M0,172v-172h172v172z\" fill=\"none\"></path><path d=\"\" fill=\"none\"></path><path d=\"\" fill=\"none\"></path><path d=\"\" fill=\"none\"></path><path d=\"\" fill=\"none\"></path><path d=\"\" fill=\"none\"></path><path d=\"\" fill=\"none\"></path><g><path d=\"M5.375,26.875h118.25v118.25h-118.25z\" fill=\"#c2e8ff\"></path><path d=\"M118.25,32.25v107.5h-107.5v-107.5h107.5M129,21.5h-129v129h129v-129z\" fill=\"#357ded\"></path><path d=\"M129,43v32.25h-21.5l0,-32.25z\" fill=\"#c2e8ff\"></path><path d=\"M118.25,21.5v21.5h-32.25v-21.5z\" fill=\"#c2e8ff\"></path><g fill=\"#357ded\"><path d=\"M150.5,0h-64.5l21.5,21.5l-43,43l21.5,21.5l43,-43l21.5,21.5z\"></path></g></g><path d=\"\" fill=\"none\"></path><path d=\"\" fill=\"none\"></path></g></g></svg>\n  </span>`;\n\n    tagContainer.prepend(tagLink.toString(), { html: true });\n    tagDiv.insertBefore(tagContainer, nodeAfter);\n    return tagDiv;\n    // Call tagAlert now that section is loaded and link added\n}\n\n/**\n * Checks for the add new tag div on conversations, opportunities and contact details pages.\n * @param {HTMLDivElement} newTagDiv - the Tags div in contact details left panel\n */\nexport async function checkAddNewTag(newTagDiv?: HTMLDivElement) {\n    if (!newTagDiv) {\n        colorConsole(\n            'Prospect Cue: new tag div not found, waiting for click',\n            'orange'\n        );\n        /** @type {HTMLElement} */\n        const addNewWait = await waitForElement('.add-new');\n\n        return tagAlert(addNewWait);\n    }\n    const addNewSection = document.querySelector('.add-new') as HTMLElement;\n    if (addNewSection) {\n        colorConsole('Prospect Cue: add new section found', 'orange');\n        return tagAlert(addNewSection);\n    } else {\n        colorConsole(\n            'Prospect Cue: add new section not found, waiting for click',\n            'orange',\n            newTagDiv\n        );\n        newTagDiv.addEventListener('click', async (e) => {\n            const addNew = document.querySelector('.add-new');\n            if (!addNew) {\n                colorConsole(\n                    `click occurred on tag div, but add new not present`,\n                    'red'\n                );\n                return;\n            }\n            colorConsole(\n                `click occured on tag div, addNew found`,\n                'green',\n                addNew\n            );\n            const addNewWait = await waitForElement('.add-new');\n            colorConsole(`add new section loaded -> `, 'green', addNewWait);\n            tagAlert(addNewWait);\n        });\n    }\n}\n\n/**\n * Attaches click listener for adding new tags\n * @param {HTMLElement} addNew\n */\nexport function tagAlert(addNew: HTMLElement) {\n    if (!window.prospectCue) {\n        window.prospectCue = {\n            tagsAdded: [],\n            addressDivs: {},\n            contactLabels: [],\n            searchBox: null,\n        };\n    }\n\n    window.prospectCue.tagsAdded = [];\n\n    colorConsole(`now attaching tag alert...`);\n    if (addNew.hasAttribute('listener'))\n        return colorConsole('tag alert found, returning...');\n    addNew.setAttribute('listener', 'tagAlert');\n\n    addNew.addEventListener(\n        'click',\n        function ta(e) {\n            addNew.removeAttribute('listener');\n            tagAddClick(e);\n        },\n        {\n            capture: true,\n            once: true,\n        }\n    );\n}\n\n/**\n * @param {Event} e\n */\nasync function tagAddClick(e: Event) {\n    colorConsole(`add new tag click captured`, 'green', e);\n    e.stopPropagation();\n    const target = e.target as HTMLElement;\n    const tagText = target.innerText?.trim();\n    // const confirm =  confirmTagAdd(e.target.textContent);\n    const dialog = new Dialog();\n    dialog.open({\n        dialogClass: 'tag-confirm-dialog',\n        accept: 'Yes',\n        cancel: 'No',\n        message: `Are you sure you want to add <span class=\"tag-add\">${tagText}</span> as a new tag?</div>`,\n        target: target,\n    });\n    const confirm = await dialog.waitForUser();\n    colorConsole(\n        `tag add confirmation: ${confirm} for tag ${tagText}`,\n        'green'\n    );\n    if (confirm) {\n        window.prospectCue.tagsAdded.push(tagText);\n        target.click();\n    }\n    setTimeout(checkAddNewTag, 100);\n}\n", "import { startAddButtons } from './add-buttons';\nimport { addTagElements, checkAddNewTag } from './tag_alert';\nimport { colorConsole } from './utils';\n\n(async function () {\n    await startProspectCueCustomizations();\n})();\n\nasync function startProspectCueCustomizations() {\n    colorConsole('Starting prospect cue customizations', 'green');\n\n    if (window.location.pathname.includes('/contacts/detail/')) {\n        window.prospectCue = {\n            addressDivs: {},\n            tagsAdded: [],\n            contactLabels: [],\n            searchBox: null,\n        };\n        colorConsole(\n            'reloaded to contacts detail page, starting to add zillow/google buttons',\n            'yellow'\n        );\n        await startAddButtons();\n        await addTagElements();\n    }\n    if (window.location.pathname.includes('conversations')) {\n        colorConsole(\n            'reloaded to conversations page, checking for add new tag',\n            'yellow'\n        );\n        await checkAddNewTag();\n    }\n    if (window.location.pathname.includes('/opportunities/list')) {\n        colorConsole(\n            'reloaded to opportunities list page, checking for add new tag',\n            'yellow'\n        );\n        await checkAddNewTag();\n    }\n    window.addEventListener(\n        'click',\n        function watchWindowClicks(e: MouseEvent) {\n            const currentUrl = window.location.pathname;\n\n            setTimeout(async () => {\n                colorConsole(\n                    `current URL -> pathname 500ms later... = ${currentUrl} -> ${window.location.pathname}`,\n                    'yellow'\n                );\n                const target = e.target as HTMLAnchorElement;\n                if (target.href && target.href.includes('/contacts/detail/')) {\n                    await startAddButtons();\n                    await addTagElements();\n                } else if (\n                    !currentUrl.includes('/contacts/detail/') &&\n                    window.location.pathname.includes('/contacts/detail/')\n                ) {\n                    await startAddButtons();\n                    await addTagElements();\n                } else if (\n                    window.location.pathname.includes(\n                        '/conversations/conversations'\n                    )\n                ) {\n                    await checkAddNewTag();\n                } else if (\n                    currentUrl.includes('/opportunities/list') &&\n                    window.location.pathname.includes('/opportunities/list')\n                ) {\n                    await checkAddNewTag();\n                }\n            }, 500);\n        },\n        true\n    );\n}\n"],
  "mappings": "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",
  "names": ["element", "e", "e", "e"]
}
